version: '3.5'

services:
  api1: &api1 # API - Instância 01
    # image: wesleyegberto/rinhabackend2024q1-jvm
    image: wesleyegberto/rinha-backend-2024-q1-native
    hostname: api1
    network_mode: host
    depends_on:
      - db:
        condition: service_healthy
    environment: &env
      - PORT=8080
      - DATABASE_HOST=127.0.0.1
      - DATABASE_NAME=rinhadb
      - DATABASE_USERNAME=rinhabackend
      - DATABASE_PASSWORD=rinhabackend
      - JAVA_TOOL_OPTIONS=-XX:+UseSerialGC -Xss136K -Xmx512M -XX:ReservedCodeCacheSize=128M
      - BPL_JVM_THREAD_COUNT=100
      - GC_MAX_METASPACE_SIZE=100
    ports:
      - "127.0.0.1:8080:8080"
      - "8080:8080"
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '1.25'
          memory: '1024MB'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # healthcheck: &healthcheck
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
    #   start_period: 30s
    #   interval: 30s
    #   timeout: 10s
    #   retries: 10

  api2: # API - Instância 02
    <<: *api1
    hostname: api2
    environment:
      <<: *env
      - PORT=8081
    ports:
      - "127.0.0.1:8081:8081"
      - "8081:8081"
    expose:
      - "8081"
    # healthcheck:
    #   <<: *healthcheck
    #   test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]

  nginx: # Load Balancer
    image: nginx
    network_mode: host
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
        # condition: service_healthy
      - api2
        # condition: service_healthy
    expose:
      - "9999"
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '50MB'
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

  db: # Banco de dados
    image: postgres
    hostname: db
    network_mode: host
    environment:
      - POSTGRES_USER=rinhabackend
      - POSTGRES_PASSWORD=rinhabackend
      - POSTGRES_DB=rinhadb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c max_connections=500 -c shared_buffers=96MB -c synchronous_commit=off -c fsync=off
    expose:
      - "5432"
    ports:
      - "127.0.0.1:5432:5432"
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '250MB'
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "rinha"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
      start_interval: 1s
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  rinha-backend:
    # removido para utilizar network_mode host no lugar de bridge (tradução de tráfego na rede virtual dropando conexões)
    # driver: bridge
    external: true
    name: host
